app Sustainify {
  wasp: {
    version: "^0.11.1"
  },
  title: "Sustainify",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int          @id @default(autoincrement())
    username    String       @unique
    password    String
    departments Department[]
    emissions   Emission[]
psl=}

entity Department {=psl
    id        Int        @id @default(autoincrement())
    name      String     @unique
    emissions Emission[]
    user      User       @relation(fields: [userId], references: [id])
    userId    Int
psl=}

entity Emission {=psl
    id           Int        @id @default(autoincrement())
    source       String
    type         String
    quantity     Float
    department   Department @relation(fields: [departmentId], references: [id])
    departmentId Int
    user         User       @relation(fields: [userId], references: [id])
    userId       Int
psl=}

action createDepartment {
  fn: import { createDepartment } from "@server/actions.js",
  entities: [Department]
}

action createEmission {
  fn: import { createEmission } from "@server/actions.js",
  entities: [Emission, Department]
}

query getDepartments {
  fn: import { getDepartments } from "@server/queries.js",
  entities: [Department]
}

query getEmissions {
  fn: import { getEmissions } from "@server/queries.js",
  entities: [Emission]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route DepartmentRoute { path: "/department/:departmentId", to: DepartmentPage }
page DepartmentPage {
  component: import { Department } from "@client/pages/Department.jsx",
  authRequired: true
}